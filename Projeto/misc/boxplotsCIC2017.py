#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Jul 18 11:27:30 2020

@author: manuel
"""
import numpy as np
import seaborn as sns
import pandas  as pd
import matplotlib.pyplot as plt


def PlotResultsBoxPlot(MetricAll,MetricRamdon,MetricClusterCentroids,MetricNearMiss,metricaStr,caminhoOut):
    """
      Salva boxplots de metricas de diferentes subamostragens
      Parameters: 
          MetricAll (Array): Metrica do dataset completo
          MetricRamdon (Array): Metrica da subamostragem aleatória
          MetricClusterCentroids (Array): Metrica da subamostragem cluster centroids
          MetricNearMiss (Array): Metrica da subamostragem NearMiss1
          metricaStr (string): nome da metrica
          caminhoOut (string): Caminho para salvar
      Returns: 
          plots
    """   
    
    MetricAll = np.round(MetricAll, 3)
    MetricRamdon = np.round(MetricRamdon, 3)
    MetricClusterCentroids = np.round(MetricClusterCentroids, 3)
    MetricNearMiss = np.round(MetricNearMiss, 3)
    Metrics = np.hstack((MetricAll,MetricRamdon,MetricClusterCentroids,MetricNearMiss))
    
    allStr = ['Full' for x in range(len(MetricAll))]
    RamdonStr = ['Random' for x in range(len(MetricAll))]
    ClusterCentroidsStr = ['Cluster Centroids' for x in range(len(MetricAll))] 
    NearMissStr = ['NearMiss1' for x in range(len(MetricAll))]
    
    strs = np.hstack((allStr,RamdonStr,ClusterCentroidsStr,NearMissStr))
    
    df = pd.DataFrame(np.transpose(np.vstack((strs,Metrics))),columns=[metricaStr,'Value'])
    
    df[metricaStr] = df[metricaStr].astype('category')
    df['Value'] = df['Value'].astype(float)
    
    fig, axs = plt.subplots()
    sns.set(style="whitegrid")
    ax = sns.boxplot(x=metricaStr, y="Value",data=df, orient='v',ax=axs,order=["Full", "Random","Cluster Centroids","NearMiss1"])
    plt.savefig(caminhoOut)
    
def PlotResultsBoxPlot2(MetricRamdon,MetricClusterCentroids,MetricNearMiss,metricaStr,caminhoOut):
    """
      Salva boxplots de metricas de diferentes subamostragens
      Parameters: 
          MetricAll (Array): Metrica do dataset completo
          MetricRamdon (Array): Metrica da subamostragem aleatória
          MetricClusterCentroids (Array): Metrica da subamostragem cluster centroids
          MetricNearMiss (Array): Metrica da subamostragem NearMiss1
          metricaStr (string): nome da metrica
          caminhoOut (string): Caminho para salvar
      Returns: 
          plots
    """   
    
    MetricRamdon = np.round(MetricRamdon, 3)
    MetricClusterCentroids = np.round(MetricClusterCentroids, 3)
    MetricNearMiss = np.round(MetricNearMiss, 3)
    Metrics = np.hstack((MetricRamdon,MetricClusterCentroids,MetricNearMiss))
    
    RamdonStr = ['Random' for x in range(len(MetricRamdon))]
    ClusterCentroidsStr = ['Cluster Centroids' for x in range(len(MetricRamdon))] 
    NearMissStr = ['NearMiss1' for x in range(len(MetricRamdon))]
    
    strs = np.hstack((RamdonStr,ClusterCentroidsStr,NearMissStr))
    
    df = pd.DataFrame(np.transpose(np.vstack((strs,Metrics))),columns=[metricaStr,'Value'])
    
    df[metricaStr] = df[metricaStr].astype('category')
    df['Value'] = df['Value'].astype(float)
    
    fig, axs = plt.subplots()
    sns.set(style="whitegrid")
    ax = sns.boxplot(x=metricaStr, y="Value",data=df, orient='v',ax=axs,order=["Random","Cluster Centroids","NearMiss1"])
    plt.savefig(caminhoOut)    
    
accAllNC = [0.555665807128742,0.554108454543268,0.555585888490160,0.555208219879513,0.554696174796914,0.555187709786426,0.551973990372986,0.556261307072870,0.554536337519749,0.552531299109296]
f1AllNC = [0.641339615707087,0.641619824384075,0.641282113340622,0.641630497814857,0.641597031751093,0.641028982694719,0.639276053082713,0.641710914735550,0.641825140673062,0.639813776539435]
precisionAllNC = [0.856176597415009,0.857321487932840,0.855837181662634,0.857342264509106,0.856222501574237,0.856483649112449,0.855880118900096,0.856401891680674,0.857017848852705,0.856339678736782]
recallAllNC =  [0.555665807128742,0.554108454543268,0.555585888490160,0.555208219879513,0.554696174796914,0.555187709786426,0.551973990372986,0.556261307072870,0.554536337519749,0.552531299109296]

#Results CIC2017 NC Random
accRandomNC = [0.574125386888376,0.580949520755047,0.575016545999333,0.593050308901901,0.564775160339241,0.565674360075249,0.576486835641017,0.559255544052179,0.587187588889993,0.590355038431075]

f1RandomNC = [0.557721388213063,0.567461411898300,0.561756225952419,0.583397086487403,0.547525158532846,0.545469613145473,0.562694494112667,0.538714181451712,0.577931995286097,0.584030828023754]

precisionRandomNC = [0.645623091689242,0.649741179272345,0.644785238889759,0.654306897587094,0.643400796848917,0.646497625286136,0.646167837012041,0.639660714000558,0.655410315180630,0.656392204450456]

recallRandomNC  = [0.574125386888376,0.580949520755047,0.575016545999333,0.593050308901901,0.564775160339241,0.565674360075249,0.576486835641017,0.559255544052179,0.587187588889993,0.590355038431075]

#Results CIC2017 NC Cluster Centroids
accClusterCentroidsNC = [0.800274023073203,0.810081401908972,0.822126787482441,0.794664548144566,0.801805328482280,0.811037039595638,0.813572201625716,0.814848076635234,0.806433785433025,0.821180615522779]

f1ClusterCentroidsNC = [0.814857758628212,0.830877879394844,0.836979095743312,0.812199336617515,0.817683298513094,0.831419759376160,0.830281813025544,0.831850659734173,0.825096178078521,0.835669945498532]

precisionClusterCentroidsNC =[0.845207486045342,0.866670216103681,0.863815610787319,0.844546804935884,0.848107298562429,0.871286747385543,0.860734711626694,0.861693979909943,0.859250100793312,0.862760821804407]

recallClusterCentroidsNC  = [0.800274023073203,0.810081401908972,0.822126787482441,0.794664548144566,0.801805328482280,0.811037039595638,0.813572201625716,0.814848076635234,0.806433785433025,0.821180615522779]

#Results CIC2017 NC NearMiss
accNearMissNC = [0.722695558062956,0.72669913532060,0.69973749050130,0.72645734747217,0.70060100858913,0.71319355692952,0.72004743592696,0.72287658457394,0.72316761461763,0.72040113755426]

f1NearMissNC =[0.702002927866794,0.71269847520773,0.67524341359589,0.71692520104078,0.68105653766488,0.69677511546111,0.71035826440119,0.70355842857716,0.70751580253316,0.70057888926740]

precisionNearMissNC = [0.785248405537195,0.79991774350464,0.75611880964865,0.80684149611603,0.76281168493033,0.78257885443608,0.80809510607596,0.78577425829051,0.79473435836896,0.78687614593496]

recallNearMissNC  =[0.722695558062956,0.72669913532060,0.69973749050130,0.72645734747217,0.70060100858913,0.71319355692952,0.72004743592696,0.72287658457394,0.72316761461763,0.72040113755426]


#Results CIC2017 NB All 

accAllNB = [0.534193861399863,0.369766566850880,0.522206772857084,0.367864078905864,0.520112621628388,0.376435176082685,0.527841390499442,0.373064448370437,0.518200939503712,0.372524113504269]
accAllNB = np.round(accAllNB, 3)

f1AllNB= [0.664896541055971,0.485341098699952,0.655042458162240,0.482118665840481,0.651517832358780,0.494841843963183,0.660793700225117,0.489161334735762,0.651072846469908,0.487357776597011]
accAllNB = np.round(accAllNB, 3)

precisionAllNB = [0.967838528855850,0.967696081137903,0.968215730808240,0.967743708791689,0.968005728879117,0.967290902313832,0.971729402599839,0.966809436489252,0.968174781612539,0.967404779001708]
accAllNB = np.round(accAllNB, 3)

recallAllNB  = [0.534193861399863,0.369766566850880,0.522206772857084,0.367864078905864,0.520112621628388,0.376435176082685,0.527841390499442,0.373064448370437,0.518200939503712,0.372524113504269]
accAllNB = np.round(accAllNB, 3)


#Results CIC2017 NB Random
accRandomNB = [0.851619108421650,0.843043755683848,0.851501655883417,0.852117642406360,0.844248063407634,0.846489789133431,0.842813479620306,0.835422868820649,0.842700638039791,0.849756194873307]
accRandomNB = np.round(accRandomNB, 3)

f1RandomNB = [0.885622871135903,0.879456953588704,0.885988207191586,0.887111386474927,0.880347100647359,0.882376633741579,0.877966088663669,0.871918131644514,0.879546602259369,0.884685634022291]
f1RandomNB = np.round(f1RandomNB, 3)

precisionRandomNB = [0.949448069500731,0.942522910964739,0.948253724817981,0.952154886491210,0.943028180153752,0.945463709486290,0.943300454955159,0.937158217959949,0.944390576834951,0.949538353761169]
precisionRandomNB = np.round(precisionRandomNB, 3)

recallRandomNB  = [0.851619108421650,0.843043755683848,0.851501655883417,0.852117642406360,0.844248063407634,0.846489789133431,0.842813479620306,0.835422868820649,0.842700638039791,0.849756194873307]
recallRandomNB = np.round(recallRandomNB, 3)


#Results CIC2017 NB Cluster Centroids
accClusterCentroidsNB = [0.961348930388928,0.961003074159787,0.961095631749833,0.960438902513442,0.960531466599120,0.961716923998019,0.961256821792893,0.960450416220510,0.962177907753241,0.960312251735691]
accClusterCentroidsNB = np.round(accClusterCentroidsNB, 3)

f1ClusterCentroidsNB = [0.963726754793052,0.963851475290162,0.963653413346822,0.962809896929992,0.963737753680941,0.964249121320396,0.963822400735264,0.962921269948493,0.964881105438096,0.962608098941457]
f1ClusterCentroidsNB = np.round(f1ClusterCentroidsNB, 3)

precisionClusterCentroidsNB = [0.971364859817456,0.971672393856361,0.970981359945537,0.970647844385450,0.972218043841266,0.971896905775896,0.971619337320868,0.970120856879775,0.972495292922107,0.970448691324757]
precisionClusterCentroidsNB = np.round(precisionClusterCentroidsNB, 3)

recallClusterCentroidsNB  = [0.961348930388928,0.961003074159787,0.961095631749833,0.960438902513442,0.960531466599120,0.961716923998019,0.961256821792893,0.960450416220510,0.962177907753241,0.960312251735691]
recallClusterCentroidsNB = np.round(recallClusterCentroidsNB, 3)

 #Results CIC2017 NB NearMiss
accNearMissNB = [0.894731388306813,0.89608879370891,0.89653901950400,0.89496045041622,0.89701107605867,0.89725167812281,0.89559490639464,0.90124693447549,0.89731042899579,0.89333701771960]
accNearMissNB = np.round(accNearMissNB, 3)

f1NearMissNB = [0.917845903830516,0.91827127981974,0.91888693387446,0.91445926731459,0.91895430130868,0.91959823829251,0.91786059349808,0.92336383752669,0.91938435067720,0.91630688756779]
f1NearMissNB = np.round(f1NearMissNB, 3)

precisionNearMissNB = [0.958544428640707,0.95690184207089,0.95788744552898,0.95709297617651,0.95674960557245,0.95943674519890,0.95699212944866,0.96304266542570,0.95792993087011,0.95682840213861]
precisionNearMissNB = np.round(precisionNearMissNB, 3)

recallNearMissNB  = [0.894731388306813,0.89608879370891,0.89653901950400,0.89496045041622,0.89701107605867,0.89725167812281,0.89559490639464,0.90124693447549,0.89731042899579,0.89333701771960]
recallNearMissNB = np.round(recallNearMissNB, 3)

#Results CIC2017 RF All
accAllRF = [0.885789193019778,0.886507046277842,0.886132206645553,0.886168983364192,0.885997122929011,0.886299823613199,0.886240415067704,0.886056531474505,0.886268704851273,0.886026119957169]
accAllRF = np.round(accAllRF, 3)

f1AllRF = [0.849747555019560,0.850693763796811,0.850179498990182,0.850266210033194,0.850046935131857,0.850394580631294,0.850381363148971,0.850059858445744,0.850436271593648,0.850003412315856]
f1AllRF = np.round(f1AllRF, 3)

precisionAllRF = [0.828296581897309,0.829294289178775,0.828722845143853,0.828879377380988,0.828671369121515,0.828925960567079,0.829095306990849,0.828499744511337,0.829153632573900,0.828436198185719]
precisionAllRF = np.round(precisionAllRF, 3)

recallAllRF  = [0.885789193019778,0.886507046277842,0.886132206645553,0.886168983364192,0.885997122929011,0.886299823613199,0.886240415067704,0.886056531474505,0.886268704851273,0.886026119957169]
recallAllRF = np.round(recallAllRF, 3)


#Results CIC2017 RF Random
accRandomRF = [0.702692479880914,0.698180270899792,0.702805303048301,0.700866391357855,0.700256167879182,0.701170368813975,0.716538768528671,0.713625814824740,0.698027136501274,0.698889503099086]
accRandomRF = np.round(accRandomRF, 3)

f1RandomRF = [0.614212678378657,0.610831611693009,0.613791771396504,0.612399318003905,0.611917867711621,0.612414226818948,0.625397902474027,0.622667261133403,0.609926169910143,0.609724363511895]
f1RandomRF = np.round(f1RandomRF, 3)

precisionRandomRF = [0.556407466918209,0.554169793033073,0.552533601165639,0.553773347448921,0.550553649724810,0.551849996432241,0.557493712294743,0.554985589078573,0.550206821063787,0.552145636370485]
precisionRandomRF = np.round(precisionRandomRF, 3)

recallRandomRF  = [0.702692479880914,0.698180270899792,0.702805303048301,0.700866391357855,0.700256167879182,0.701170368813975,0.716538768528671,0.713625814824740,0.698027136501274,0.698889503099086]
recallRandomRF = np.round(recallRandomRF, 3)


#Results CIC2017 RF Cluster Centroids
accClusterCentroidsRF = [0.761196951205471,0.762264976454469,0.762141064314827,0.761228742818325,0.761715062058166,0.769115632160086,0.761553872015105,0.761746859636397,0.763361503212287,0.759996776162020]
accClusterCentroidsRF = np.round(accClusterCentroidsRF, 3)

f1ClusterCentroidsRF = [0.667168378484462,0.668476330847215,0.668027212817093,0.667731248323619,0.667666644769605,0.684101612411375,0.669783141156073,0.667910262387205,0.670109815692988,0.665671720805188]
f1ClusterCentroidsRF = np.round(f1ClusterCentroidsRF, 3)

precisioRFlusterCentroidsRF =[0.597901545499339,0.599431404187562,0.598742683439368,0.599059432831588,0.598493684409541,0.649992554693394,0.604344822337132,0.598648886233459,0.601532499418260,0.596354583149019]
precisioRFlusterCentroidsRF = np.round(precisioRFlusterCentroidsRF, 3)

recallClusterCentroidsRF  = [0.761196951205471,0.762264976454469,0.762141064314827,0.761228742818325,0.761715062058166,0.769115632160086,0.761553872015105,0.761746859636397,0.763361503212287,0.759996776162020]
recallClusterCentroidsRF = np.round(recallClusterCentroidsRF, 3)

#Results CIC2017 RF NearMiss
accNearMissRF = [0.777454118405600,0.77846476229952,0.77819098717388,0.77764728909767,0.77792617496028,0.78036452396578,0.77762682202317,0.78790600209549,0.77958412968890,0.78621348715646]
accNearMissRF = np.round(accNearMissRF, 3)

f1NearMissRF =[0.697081745461416,0.69824893470713,0.69807820928816,0.69687878520302,0.69734429076889,0.70284058879295,0.69689280624872,0.71661424558365,0.69970621617393,0.71424195505468]
f1NearMissRF = np.round(f1NearMissRF, 3)

precisionNearMissRF = [0.646613744968282,0.64713739714203,0.64775515028270,0.64537997093246,0.64600527859977,0.65674792548568,0.64619230153545,0.68545344051353,0.64898623699540,0.68275492786796]
precisionNearMissRF = np.round(precisionNearMissRF, 3)

recallNearMissRF  =[0.777454118405600,0.77846476229952,0.77819098717388,0.77764728909767,0.77792617496028,0.78036452396578,0.77762682202317,0.78790600209549,0.77958412968890,0.78621348715646]
recallNearMissRF = np.round(recallNearMissRF, 3)

#Results CIC2017 KNN All
accAllKNN = [0.987181191820291,0.988263983286395,0.988498788490018,0.988301467249624,0.987075812376497,0.988325513565658,0.988382800377385,0.987158559993436,0.988334707745318,0.988300760005035]
accAllKNN = np.round(accAllKNN, 3)

f1AllKNN = [0.987178872485724,0.988259422943723,0.988495180782721,0.988308193664010,0.987083188449872,0.988319876257802,0.988378133659960,0.987167421413802,0.988347250650863,0.988292901306332]
f1AllKNN = np.round(f1AllKNN, 3)

precisionAllKNN = [0.987231573069693,0.988314078860596,0.988545322575768,0.988370985226039,0.987140362212318,0.988370336442077,0.988447367696026,0.987217675739833,0.988410414646990,0.988340222719647]
precisionAllKNN = np.round(precisionAllKNN, 3)

recallAllKNN  = [0.987181191820291,0.988263983286395,0.988498788490018,0.988301467249624,0.987075812376497,0.988325513565658,0.988382800377385,0.987158559993436,0.988334707745318,0.988300760005035]
recallAllKNN = np.round(recallAllKNN, 3)

    
#Results CIC2017 KNN Random
accRandomKNN = [0.986948136128571,0.987290092260782,0.987087451612918,0.987577931808979,0.987133506812370,0.987326935248478,0.987010309669509,0.986427720652054,0.987544543079224,0.987463947540694]
accRandomKNN = np.round(accRandomKNN, 3)
print(accRandomKNN)

f1RandomKNN = [0.986804578581223,0.987098212261534,0.986897752469421,0.987415050087591,0.986930435632632,0.987146910983729,0.986839873775662,0.986246729673055,0.987365054627993,0.987273829780005]
f1RandomKNN = np.round(f1RandomKNN, 3)
print(f1RandomKNN)

precisionRandomKNN = [0.986815764808902,0.987083999399726,0.986882939067518,0.987401614333133,0.986895597890795,0.987157825470048,0.986837320444823,0.986266943602634,0.987350479531556,0.987259936630554]
precisionRandomKNN = np.round(precisionRandomKNN, 3)

recallRandomKNN  = [0.986948136128571,0.987290092260782,0.987087451612918,0.987577931808979,0.987133506812370,0.987326935248478,0.987010309669509,0.986427720652054,0.987544543079224,0.987463947540694]
recallRandomKNN = np.round(recallRandomKNN, 3)


#Results CIC2017 KNN Cluster Centroids
accClusterCentroidsKNN = [0.994300780620351,0.994128009395184,0.994427429939899,0.994496448021369,0.994289267045847,0.994461906900164,0.994392889216386,0.994369797243618,0.994220185598820,0.994277687587072]
accClusterCentroidsKNN = np.round(accClusterCentroidsKNN, 3)

f1ClusterCentroidsKNN = [0.994173747741107,0.994006812706436,0.994306275470920,0.994286013995221,0.994230208425817,0.994294398637552,0.994277899280813,0.994189144329297,0.994042417914302,0.994044814507518]
f1ClusterCentroidsKNN = np.round(f1ClusterCentroidsKNN, 3)

precisionClusterCentroidsKNN = [0.994173069956796,0.993910231361747,0.994253263944773,0.994157364399303,0.994199223154655,0.994237079208083,0.994197893435176,0.994147915423019,0.993956951794227,0.993939385962880]
precisionClusterCentroidsKNN = np.round(precisionClusterCentroidsKNN, 3)

recallClusterCentroidsKNN  = [0.994300780620351,0.994128009395184,0.994427429939899,0.994496448021369,0.994289267045847,0.994461906900164,0.994392889216386,0.994369797243618,0.994220185598820,0.994277687587072]
recallClusterCentroidsKNN = np.round(recallClusterCentroidsKNN, 3)

#Results CIC2017 KNN Cluster Centroids
accNearMissKNN = [0.994335321343864,0.99408195456691,0.99417413130080,0.99438131095069,0.99408202270477,0.99407044085984,0.99401294125774,0.99395530378916,0.99392083266171,0.99394379008209]
accNearMissKNN = np.round(accNearMissKNN, 3)

f1NearMissKNN = [0.994077197757901,0.99401289386993,0.99407914191247,0.99417850920496,0.99393081817080,0.99380288071856,0.99384429274906,0.99379399646382,0.99378626503990,0.99372326145388]
f1NearMissKNN = np.round(f1NearMissKNN, 3)

precisionNearMissKNN = [0.994010161180831,0.99403489438474,0.99404421951811,0.99415659920706,0.99385417461253,0.99372177748848,0.99378868033039,0.99376132009303,0.99375230886924,0.99363087124206]
precisionNearMissKNN = np.round(precisionNearMissKNN, 3)

recallNearMissKNN  = [0.994335321343864,0.99408195456691,0.99417413130080,0.99438131095069,0.99408202270477,0.99407044085984,0.99401294125774,0.99395530378916,0.99392083266171,0.99394379008209]
recallNearMissKNN = np.round(recallNearMissKNN, 3)

#Results CIC2017 SVM Random
accRandomSVM = [0.888704542120002,0.889487470051393,0.887912401658702,0.890217432663427,0.887877862287341,0.888519173345123,0.843818617630711,0.843042599355251,0.890139140502618,0.889215745106379]
accRandomSVM = np.round(accRandomSVM, 3)

f1RandomSVM = [0.875271364708018,0.876101797549643,0.874577846566289,0.876848784733049,0.874550974070865,0.875199852406643,0.830598474616368,0.829959055965587,0.876750268784910,0.875861147337085]
f1RandomSVM = np.round(f1RandomSVM, 3)

precisionRandomSVM = [0.871609707597305,0.872538318039665,0.871267462988490,0.873211072025304,0.870845470052873,0.871465820622073,0.828105940031282,0.827671790192630,0.872996775654953,0.872200549973611]
precisionRandomSVM = np.round(precisionRandomSVM, 3)

recallRandomSVM  = [0.888704542120002,0.889487470051393,0.887912401658702,0.890217432663427,0.887877862287341,0.888519173345123,0.843818617630711,0.843042599355251,0.890139140502618,0.889215745106379]
recallRandomSVM  =np.round(recallRandomSVM, 3)

#Results CIC2017 SVM Cluster Centroids
accClusterCentroidsSVM = [0.934591383240840,0.942799903284860,0.943491376332696,0.934233705226071,0.933819973749050,0.934751822044143,0.943272618417113,0.934521547902778,0.945183871784834,0.932230320196193]
accClusterCentroidsSVM = np.round(accClusterCentroidsSVM, 3)

f1ClusterCentroidsSVM = [0.924258974167373,0.934362698128778,0.935300309398156,0.923669458650716,0.923486917688711,0.924336266032132,0.934695468306700,0.924285416937533,0.936954639459301,0.921667067515571]
f1ClusterCentroidsSVM =np.round(f1ClusterCentroidsSVM, 3)

precisioSVMlusterCentroidsSVM =[0.928976508930575,0.937664819807368,0.938284668328835,0.928871964674343,0.928635851968210,0.929552093711860,0.937526930210774,0.929744091410251,0.939406459963136,0.927114703535917]
precisioSVMlusterCentroidsSVM =np.round(precisioSVMlusterCentroidsSVM, 3)

recallClusterCentroidsSVM  = [0.934591383240840,0.942799903284860,0.943491376332696,0.934233705226071,0.933819973749050,0.934751822044143,0.943272618417113,0.934521547902778,0.945183871784834,0.932230320196193]
recallClusterCentroidsSVM  = np.round(recallClusterCentroidsSVM, 3)

#Results CIC2017 SVM Cluster Centroids
accNearMissSVM = [0.93376240588,0.93393434884,0.93490224975,0.93065294233,0.93131001451,0.93451003420,0.93363575656,0.93135527846,0.93401570452,0.93186188157]
accNearMissSVM =np.round(accNearMissSVM, 3)

f1NearMissSVM =[0.92796220154,0.92798339956,0.92916825031,0.92541352799,0.92616350886,0.92869094431,0.92756267973,0.92632597535,0.92891819022,0.92575666723]
f1NearMissSVM =np.round(f1NearMissSVM, 3)

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR NC
caminhoOut = '/home/riccelli/accNCBoxPlotEnglish.pdf'
PlotResultsBoxPlot(accAllNC,accRandomNC,accClusterCentroidsNC,accNearMissNC,'Accuracy',caminhoOut)
mediasAccNC = [np.mean(accAllNC),np.mean(accRandomNC),np.mean(accClusterCentroidsNC),np.mean(accNearMissNC)]
stdsAccNC = [np.std(accAllNC),np.std(accRandomNC),np.std(accClusterCentroidsNC),np.std(accNearMissNC)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR NC
caminhoOut = '/home/riccelli/F1NCBoxPlotEnglish.pdf'
PlotResultsBoxPlot(f1AllNC,f1RandomNC,f1ClusterCentroidsNC,f1NearMissNC,'F1',caminhoOut)
mediasF1NC = [np.mean(f1AllNC),np.mean(f1RandomNC),np.mean(f1ClusterCentroidsNC),np.mean(f1NearMissNC)]
stdsF1NC = [np.std(f1AllNC),np.std(f1RandomNC),np.std(f1ClusterCentroidsNC),np.std(f1NearMissNC)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR NC
caminhoOut = '/home/riccelli/accNBBoxPlotEnglish.pdf'
PlotResultsBoxPlot(accAllNB,accRandomNB,accClusterCentroidsNB,accNearMissNB,'Accuracy',caminhoOut)
mediasAccNB = [np.mean(accAllNB),np.mean(accRandomNB),np.mean(accClusterCentroidsNB),np.mean(accNearMissNB)]
stdsAccNB = [np.std(accAllNB),np.std(accRandomNB),np.std(accClusterCentroidsNB),np.std(accNearMissNB)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR NC
caminhoOut = '/home/riccelli/F1NBBoxPlotEnglish.pdf'
PlotResultsBoxPlot(f1AllNB,f1RandomNB,f1ClusterCentroidsNB,f1NearMissNB,'F1',caminhoOut)
mediasF1NB = [np.mean(f1AllNB),np.mean(f1RandomNB),np.mean(f1ClusterCentroidsNB),np.mean(f1NearMissNB)]
stdsF1NC = [np.std(f1AllNB),np.std(f1RandomNB),np.std(f1ClusterCentroidsNB),np.std(f1NearMissNB)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR RF
caminhoOut = '/home/riccelli/accRFBoxPlotEnglish.pdf'
PlotResultsBoxPlot(accAllRF,accRandomRF,accClusterCentroidsRF,accNearMissRF,'Accuracy',caminhoOut)
mediasAccRF = [np.mean(accAllRF),np.mean(accRandomRF),np.mean(accClusterCentroidsRF),np.mean(accNearMissRF)]
stdsAccRF = [np.std(accAllRF),np.std(accRandomRF),np.std(accClusterCentroidsRF),np.std(accNearMissRF)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR RF
caminhoOut = '/home/riccelli/F1RFBoxPlotEnglish.pdf'
PlotResultsBoxPlot(f1AllRF,f1RandomRF,f1ClusterCentroidsRF,f1NearMissRF,'F1',caminhoOut)
mediasF1RF = [np.mean(f1AllRF),np.mean(f1RandomRF),np.mean(f1ClusterCentroidsRF),np.mean(f1NearMissRF)]
stdsF1RF = [np.std(f1AllRF),np.std(f1RandomRF),np.std(f1ClusterCentroidsRF),np.std(f1NearMissRF)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR KNN
caminhoOut = '/home/riccelli/accKNNBoxPlotEnglish.pdf'
PlotResultsBoxPlot(accAllKNN,accRandomKNN,accClusterCentroidsKNN,accNearMissKNN,'Accuracy',caminhoOut)
mediasAccKNN = [np.mean(accAllKNN),np.mean(accRandomKNN),np.mean(accClusterCentroidsKNN),np.mean(accNearMissKNN)]
stdsAccKNN = [np.std(accAllKNN),np.std(accRandomKNN),np.std(accClusterCentroidsKNN),np.std(accNearMissKNN)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR KNN
caminhoOut = '/home/riccelli/F1KNNBoxPlotEnglish.pdf'
PlotResultsBoxPlot(f1AllKNN,f1RandomKNN,f1ClusterCentroidsKNN,f1NearMissKNN,'F1',caminhoOut)
mediasF1KNN = [np.mean(f1AllKNN),np.mean(f1RandomKNN),np.mean(f1ClusterCentroidsKNN),np.mean(f1NearMissKNN)]
stdsF1KNN = [np.std(f1AllKNN),np.std(f1RandomKNN),np.std(f1ClusterCentroidsKNN),np.std(f1NearMissKNN)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR SVM
caminhoOut = '/home/riccelli/accSVMBoxPlotEnglish.pdf'
PlotResultsBoxPlot2(accRandomSVM,accClusterCentroidsSVM,accNearMissSVM,'Accuracy',caminhoOut)
mediasAccSVM = [np.mean(accRandomSVM),np.mean(accClusterCentroidsSVM),np.mean(accNearMissSVM)]
stdsAccSVM = [np.std(accRandomSVM),np.std(accClusterCentroidsSVM),np.std(accNearMissSVM)]

# RESULTADOS DE ACURACIA PARA CLASSIFICADOR SVM
caminhoOut = '/home/riccelli/F1SVMBoxPlotEnglish.pdf'
PlotResultsBoxPlot2(f1RandomSVM,f1ClusterCentroidsSVM,f1NearMissSVM,'F1',caminhoOut)
mediasF1SVM = [np.mean(f1RandomSVM),np.mean(f1ClusterCentroidsSVM),np.mean(f1NearMissSVM)]
stdsF1SVM = [np.std(f1RandomSVM),np.std(f1ClusterCentroidsSVM),np.std(f1NearMissSVM)]